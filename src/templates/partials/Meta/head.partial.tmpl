{{define "head"}}
<head>
   <title>Moody App</title>
   <meta name="viewport" content="width=device-width, initial-scale=1.0" />
   <meta name="description" content="Moody - How are you feeling today?" />
   <meta name="author" content="Immanuel Garcia" />
   <meta name="keywords" content="Moody, mental wellness, playlist generator" />
   <meta name="theme-color" content="#ffffff" />
   <meta name="apple-mobile-web-app-capable" content="yes" />

   <!-- Tailwind CSS -->
   <link rel="stylesheet" href="/static/style.css" />

   <!-- franken/ui -->
   <script
	  src="https://cdn.jsdelivr.net/npm/franken-ui@2.0.0/dist/js/core.iife.js"
	  type="module"
   ></script>
   <script
	  src="https://cdn.jsdelivr.net/npm/franken-ui@2.0.0/dist/js/icon.iife.js"
	  type="module"
   ></script>

   <!-- unpkg/lucide - Lucide Icons -->
   <!-- Production version -->
   <script src="https://unpkg.com/lucide@latest"></script>

   <!-- Lit Sugar -->
   <script src="/static/components/lit-support.js" type="module"></script>
   <!-- Custom Elements -->
   <script src="/static/components/index.js" type="module"></script>

   <!-- WebAssembly -->
   <script src="/static/wasm/bundle/wasm_exec.js"></script>
   <script>
	  const go = new Go();
	  WebAssembly.instantiateStreaming(
		 fetch("/static/wasm/bundle/main.wasm"),
		 go.importObject,
	  ).then((result) => {
		 go.run(result.instance);
		 go_setpath("{{ .Data.Path }}"); // Should be replaced with the actual path after execution
	  });
   </script>
   <!-- Experimental: Using Popstate API for SPA navigation -->
   <script src="/static/lifecycle/patches.js"></script>
   <script src="/static/lifecycle/lifecycle.js" type="module"></script>

   <!-- Piped API and other things  -->
   <script src="/static/modules/index.js" type="module"></script>
   <script>
      if(window.Piped) {
         console.log("Piped API is available.");
         window.pipedPlayer = new Piped();
         pipedPlayer?.init();
      } else {
         console.error("Piped API is not available. Trying again in 5 seconds.");
         setTimeout(() => {
            window.pipedPlayer = new Piped();
            if (pipedPlayer) {
               console.infos("Piped API has been made available.");
            } else {
               console.error("Piped API is still not available. Abort.");
            }
            pipedPlayer?.init();
         }, 5000);
      }
   </script>
</head>
{{end}}
